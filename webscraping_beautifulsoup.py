# -*- coding: utf-8 -*-
"""WebScraping_BeautifulSoup.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TdqAILpLq7gKVqCbplaJ1FEtCFCa_Nbk
"""

pip install beautifulsoup4

from bs4 import BeautifulSoup

path = '/content/index2.html'

with open(path,"r") as f:
  doc = BeautifulSoup(f,"html.parser")

print(doc)

print(doc.prettify())

tag = doc.title
print(tag)

tag = doc.body
print(tag.h2)
print(tag.a)

## to modify the content

tag = doc.title
tag.string = 'This is altered Title'
print(tag)
print(doc.title)

## find only gives the first instance
tag = doc.find('a')
print(tag)

## find_all only gives all the instance
tag = doc.find_all('a')
print(tag)

## find_all only gives all the instance and to access specific objects inside it
tag = doc.find_all('p')
print(tag[1])

pip install requests

import requests

url='https://www.newegg.ca/gigabyte-geforce-rtx-4070-gv-n4070wf3oc-12gd/p/N82E16814932611'

results = requests.get(url)

print(results.text)

doc = BeautifulSoup(results.text,"html.parser")

 print(doc.prettify())

prices = doc.find_all(text="$")
parent = prices[0].parent
print(parent)

strong = parent.strong
print(strong.string)

## alternate way

strong = doc.find('strong')
print(strong.string)

"""

---

"""

with open('/content/index3.html', 'r') as f:
  doc = BeautifulSoup(f, 'html.parser')

print(doc.prettify())

## Access and modify attributes of a tag

tag = doc.find('option')
print(tag)

tag['value'] = 'new-value'
print(tag)

tag['color']='blue'
print(tag)

print(tag.attrs)

## find multiple tags at the same time

tags = doc.find_all(['p','div', 'li'])
print(tags)

## searching with a specific attribute values

tags = doc.find_all(['option'], text='Undergraduate', value='undergraduate')
print(tags)

## retrieving based on class value

tags = doc.find_all(class_='btn-item')
print(tags)

import re

tags = doc.find_all(text=re.compile('\$.*'))
print(tags)

for tags in tags:
  print(tags.strip())

## limit the number of results

tags = doc.find_all(['option'], limit=2)
print(tags)

## modifying and saving the changes
tags = doc.find_all('input', type='text')

for tag in tags:
  tag['placeholder'] = 'Jane Doe'

with open('index4.html', 'w') as file:
  file.write(str(doc))

"""

---

"""

url = 'https://coinmarketcap.com/'

result = requests.get(url).text
doc = BeautifulSoup(result, 'html.parser')

tbody = doc.tbody
print(tbody)

trs = tbody.contents
print(trs[0].next_sibling)
print("\n")
print(trs[1].previous_sibling)

print(list(trs[0].next_siblings))

print(trs[0].parent.name)

print(list(trs[0].parent.descendants)) ## can use .contents as well

## just getting the certain things from a webpage by indexing
prices = {}

for tr in trs:
  for td in tr.contents[2:4]:
    print(td)
    print()

## just getting the certain things from a webpage by indexing
prices = {}

for tr in trs[:10]:
  name, price =  tr.contents[2:4]
  fixed_name = name.p.string
  fixed_price = price.span.string
  prices[fixed_name] = fixed_price

print(prices)

"""

---



---

"""

gpu = input("What GPU are you looking for? ")
url= f"https://www.newegg.com/p/pl?d={gpu}&N=4131"

page = requests.get(url).text
doc  = BeautifulSoup(page, "html.parser")

## Getting the total number of pages with relevant products
page_text = doc.find(class_="list-tool-pagination-text")
page_text = page_text.strong.text
pages = int(page_text.split('/')[1])

print(pages)

## getting the product names by filtering out with the class names

for page in range(1,pages+1):
  url= f"https://www.newegg.com/p/pl?d={gpu}&N=4131&pages={page}"
  page = requests.get(url).text
  doc  = BeautifulSoup(page, "html.parser")

  div = doc.find(class_="item-cells-wrap border-cells short-video-box items-grid-view four-cells expulsion-one-cell")
  items = div.find_all(string=re.compile(gpu))

  for item in items:
    parent = item.parent
    if parent.name !='a':
      continue
    link = parent['href']

    print(link)
    print(item)
    print("\n")

## getting the price
items_found={}

for page in range(1,pages+1):
  url= f"https://www.newegg.com/p/pl?d={gpu}&N=4131&pages={page}"
  page = requests.get(url).text
  doc  = BeautifulSoup(page, "html.parser")

  div = doc.find(class_="item-cells-wrap border-cells short-video-box items-grid-view four-cells expulsion-one-cell")
  items = div.find_all(string=re.compile(gpu))

  for item in items:
    parent = item.parent
    if parent.name !='a':
      continue
    link = parent['href']
    next_parent = item.find_parent(class_='item-container')
    price = next_parent.find(class_='price-current').strong.string

    items_found[item] = {'price': int(price.replace(',','')), 'link' : link}

for item in items_found:
  print(item)
  print(items_found[item])
  print("\n")

sorted_items = sorted(items_found.items(), key=lambda x: x[1]['price'])

for item in sorted_items:
  print(item[0])
  print(item[1])
  print("\n")

